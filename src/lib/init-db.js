import dotenv from 'dotenv';
import { initDatabase, sql } from './db.js';
import bcrypt from 'bcryptjs';

// Load environment variables from .env.local
dotenv.config({ path: '.env.local' });

async function setupDatabase() {
  try {
    console.log('Starting database setup...');
    
    // Check if DATABASE_URL is loaded
    if (!process.env.DATABASE_URL) {
      throw new Error('DATABASE_URL not found in .env.local');
    }
    
    console.log('Database URL loaded successfully');
    
    // Initialize tables
    await initDatabase();
    
    // Create default admin accounts
    const devPasswordHash = await bcrypt.hash(process.env.DEVELOPER_PASSWORD || 'admin123', 10);
    const politicianPasswordHash = await bcrypt.hash(process.env.POLITICIAN_PASSWORD || 'admin123', 10);
    
    await sql`
      INSERT INTO admins (role, email, password_hash)
      VALUES 
        ('developer', 'developer@somadha.com', ${devPasswordHash}),
        ('politician', 'politician@somadha.com', ${politicianPasswordHash})
      ON CONFLICT DO NOTHING
    `;
    
    // Add sample carousel images (optional)
await sql`
  INSERT INTO carousel_images (image_url, title, display_order, is_active)
  VALUES 
    ('/carousel/C1.svg', '‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶Ø‡¶º', 1, true),
    ('/carousel/C2.svg', '‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶¶‡¶æ‡¶Ø‡¶º‡¶ø‡¶§‡ßç‡¶¨', 2, true),
    ('/carousel/C3.svg', '‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá ‡¶ó‡¶°‡¶º‡¶ø ‡¶â‡¶®‡ßç‡¶®‡¶§ ‡¶¨‡ßç‡¶∞‡¶æ‡¶π‡ßç‡¶Æ‡¶£‡¶¨‡¶æ‡¶°‡¶º‡¶ø‡¶Ø‡¶º‡¶æ', 3, true),
    ('/carousel/C4.svg', '‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®, ‡¶∏‡ßç‡¶¨‡¶ö‡ßç‡¶õ ‡¶™‡ßç‡¶∞‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ', 4, true)
  ON CONFLICT DO NOTHING
`;

    
    console.log('\n‚úÖ Database setup completed successfully!');
    console.log('\nüìã Default credentials:');
    console.log('Developer: developer@somadha.com / admin123');
    console.log('Politician: politician@somadha.com / admin123');
    console.log('\n‚ö†Ô∏è  Remember to change these passwords in production!');
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Database setup failed:', error);
    process.exit(1);
  }
}

setupDatabase();